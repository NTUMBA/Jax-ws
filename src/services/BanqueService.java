
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BanqueService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BanqueService {


    /**
     * 
     * @param montant
     * @return
     *     returns double
     */
    @WebMethod(operationName = "ConversionEuroToDh")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ConversionEuroToDh", targetNamespace = "http://services/", className = "services.ConversionEuroToDh")
    @ResponseWrapper(localName = "ConversionEuroToDhResponse", targetNamespace = "http://services/", className = "services.ConversionEuroToDhResponse")
    @Action(input = "http://services/BanqueService/ConversionEuroToDhRequest", output = "http://services/BanqueService/ConversionEuroToDhResponse")
    public double conversionEuroToDh(
        @WebParam(name = "montant", targetNamespace = "")
        double montant);

    /**
     * 
     * @param code
     * @return
     *     returns services.Compte
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCompte", targetNamespace = "http://services/", className = "services.GetCompte")
    @ResponseWrapper(localName = "getCompteResponse", targetNamespace = "http://services/", className = "services.GetCompteResponse")
    @Action(input = "http://services/BanqueService/getCompteRequest", output = "http://services/BanqueService/getCompteResponse")
    public Compte getCompte(
        @WebParam(name = "code", targetNamespace = "")
        Long code);

    /**
     * 
     * @param compte
     * @return
     *     returns java.util.List<services.Compte>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCompte", targetNamespace = "http://services/", className = "services.AddCompte")
    @ResponseWrapper(localName = "addCompteResponse", targetNamespace = "http://services/", className = "services.AddCompteResponse")
    @Action(input = "http://services/BanqueService/addCompteRequest", output = "http://services/BanqueService/addCompteResponse")
    public List<Compte> addCompte(
        @WebParam(name = "compte", targetNamespace = "")
        Compte compte);

    /**
     * 
     * @return
     *     returns java.util.List<services.Compte>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComptes", targetNamespace = "http://services/", className = "services.GetComptes")
    @ResponseWrapper(localName = "getComptesResponse", targetNamespace = "http://services/", className = "services.GetComptesResponse")
    @Action(input = "http://services/BanqueService/getComptesRequest", output = "http://services/BanqueService/getComptesResponse")
    public List<Compte> getComptes();

    /**
     * 
     * @param compte
     * @return
     *     returns java.util.List<services.Compte>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addLotComptes", targetNamespace = "http://services/", className = "services.AddLotComptes")
    @ResponseWrapper(localName = "addLotComptesResponse", targetNamespace = "http://services/", className = "services.AddLotComptesResponse")
    @Action(input = "http://services/BanqueService/addLotComptesRequest", output = "http://services/BanqueService/addLotComptesResponse")
    public List<Compte> addLotComptes(
        @WebParam(name = "compte", targetNamespace = "")
        List<Compte> compte);

}
